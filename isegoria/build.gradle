apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    androidExtensions {
        // Generated Kotlin fields for XML layout views
        experimental = true
    }
    signingConfigs {
        release {
            keyAlias 'IsegoriaAndroidKey'
            keyPassword 'EulersBridge88902!@#'
            storePassword 'EulersBridge88902'
        }
    }
    compileSdkVersion Versions.compile_sdk
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "au.com.isegoria.app"
        minSdkVersion Versions.min_sdk
        renderscriptSupportModeEnabled true
        targetSdkVersion Versions.target_sdk
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        versionCode Versions.version_code
        versionName Versions.version_name
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        debug {
            multiDexEnabled true
        }
        release {
            minifyEnabled true
            multiDexEnabled false
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

if (project.hasProperty('devBuild')) {
    android.aaptOptions.cruncherEnabled = false

} else {
    def keystorePropsFile = rootProject.file('keystore.properties')
    def keystoreProps = new Properties()
    if (keystorePropsFile.canRead()) {
        keystoreProps.load(new FileInputStream(keystorePropsFile))

        if (keystoreProps != null && keystoreProps.containsKey('storeFile')) {
            android.signingConfigs.release.storeFile = file(keystoreProps['storeFile'])
        }

    } else {
        android.buildTypes.release.signingConfig = null
    }
}

dependencies {
    implementation Deps.kotlin_stdlib

    implementation Deps.multidex

    implementation Deps.support_core_ui
    implementation Deps.support_fragment
    implementation Deps.appcompat_v7
    implementation Deps.design
    implementation Deps.recyclerview_v7
    implementation Deps.support_vector_drawable

    implementation Deps.constraint_layout
    implementation Deps.ktx

    implementation Deps.rxjava2
    implementation Deps.rxkotlin
    implementation Deps.rxjava_reactive_streams

    // ViewModel and LiveData
    implementation Deps.lifecycle_extensions
    implementation Deps.lifecycle_java8
    // ReactiveStreams support for LiveData
    implementation Deps.lifecycle_reactive_streams

    implementation Deps.dagger
    kapt Deps.dagger_processor
    implementation Deps.dagger_android
    implementation Deps.dagger_android_support
    kapt Deps.dagger_android_processor

    implementation Deps.okhttp
    implementation Deps.okhttp_interceptor
    implementation Deps.retrofit
    implementation Deps.retrofit_rxjava
    implementation Deps.retrofit_moshi

    implementation Deps.aws_s3
    implementation Deps.aws_cognito
    implementation Deps.aws_sns
    // Required for push notifications
    implementation Deps.firebase_messaging
    // Secures/obfuscates user email/password storage for auto-login
    implementation Deps.secure_prefs

    implementation Deps.glide
    kapt Deps.glide_processor
    implementation Deps.image_view
    implementation Deps.image_cropper

    implementation Deps.bottom_navigation
    // Used in Candidate fragment for bottom tabs
    implementation Deps.view_pager_indicator

    // Dependencies for local unit tests
    testImplementation TestDeps.junit
    testImplementation TestDeps.mockito
    testImplementation TestDeps.mockito_kotlin
    testImplementation TestDeps.livedata_test

    androidTestImplementation TestDeps.test_runner
    androidTestImplementation TestDeps.espresso
    androidTestImplementation TestDeps.espresso_intents
}

apply plugin: 'com.google.gms.google-services'
